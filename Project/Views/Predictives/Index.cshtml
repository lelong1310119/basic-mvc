@model IEnumerable<Project.Models.Entities.Predictive>

@{
    ViewData["Title"] = "Predictive";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int currentPage = (int)(ViewData["page"] ?? 0);
    int totalPage = (int)(ViewData["totalPage"] ?? 0);
}

<h1>Predictive</h1>

<p>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create")'">Create</button>
</p>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-start">
        @if (currentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" href="#" onclick="goToPage(@currentPage - 1)">Previous</a>
            </li>
        }
        @if (totalPage > 0)
        {
            @if (currentPage > 3)
            {
                <li class="page-item d-none d-md-block">
                    <a class="page-link">...</a>
                </li>
            }
            @for (var i = (currentPage - 2); i <= (currentPage + 2); i++)
            {
                @if (i > 0 && i <= totalPage)
                {
                    @if (i == currentPage)
                    {
                        <li class="page-item active"><a class="page-link" href="#" onclick="goToPage(@i)">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"><a class="page-link" href="#" onclick="goToPage(@i)">@i</a></li>
                    }
                }
            }
            @if (currentPage < (totalPage - 2))
            {
                <li class="page-item d-none d-md-block">
                    <a class="page-link">...</a>
                </li>
            }
        }
        @if (currentPage == totalPage)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" href="#" onclick="goToPage(@currentPage + 1)">Next</a>
            </li>
        }
        <div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <button class="btn btn-primary btnGo" type="button" style="margin-left: 15px">Go</button>
                </div>
                <input class="form-control input-page" style="margin-left: 2px; width: 60px;margin-right: 10px;">
            </div>
            <span class="mx-2">Total Page: <span id="currentPage">@ViewData["totalPage"]</span></span>
            <span class="d-flex align-items-center justify-content-center invalid-feedback d-none">Vui lòng nhập số từ 1 đến @ViewData["totalPage"]</span>
        </div>
    </ul>
</nav>
<table class="table">
    <thead>
        <tr>
            <th>
                UDI
            </th>
            <th>
                Product ID
            </th>
            <th>
                Type
            </th>
            <th>
                Air temperature
            </th>
            <th>
                Process temperature
            </th>
            <th>
                Rotational
            </th>
            <th>
                Torque
            </th>
            <th>
                Tool wear
            </th>
            <th>
                Target
            </th>
            <th>
                Failure Type
            </th>
            <th class="action">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UDI)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AirTemperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProcessTemperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RotationalSpeed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Torque)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ToolWear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Target)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FailureType)
                </td>
                <td>
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Edit", new { id = item.Id })'">Edit</button>
                    <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Details", new { id = item.Id })'">Details</button>
                    <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", new { id = item.Id })'">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    const input = document.querySelector('.input-page');
    const btnGo = document.querySelector('.btnGo');
    const feedback = document.querySelector('.invalid-feedback');

    const currentPage = @ViewData["page"];
    const totalPage = @ViewData["totalPage"];

    btnGo.addEventListener('click', function (e) {
        e.preventDefault();

        const page = input.value.trim();
        if (isNaN(page) || page < 1 || page > totalPage) {
            feedback.classList.remove("d-none");
            feedback.classList.add("d-block");
            input.classList.add('is-invalid');
            return;
        }
        window.location.href = '/Predictives/Index?page=' + page;
    });

    input.addEventListener('input', function () {
        feedback.classList.remove("d-block");
        feedback.classList.add("d-none");
        input.classList.remove('is-invalid');
    });
    function goToPage(page) {
        window.location.href = "/Predictives/Index?page=" + page;
    }
</script>
